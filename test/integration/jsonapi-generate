#!/bin/bash
. test/integration/helper

setup () {
  true
}

assert_json () {
ruby -rjson -rstrscan -e '
  scanner = StringScanner.new(ARGV[0])
  lineno = 0
  while expected_line = scanner.scan_until(/^}$/) || scanner.rest
    actual_line = STDIN.gets
    if actual_line.nil?
      STDERR.puts "not enough actual lines"
      exit 1
    end

    expected = JSON.load(expected_line) 
    actual   = JSON.load(actual_line)
    if expected == actual
      exit 0
    else
      STDERR.puts "#{expected.to_json} not equal to\n#{actual.to_json} (line: #{lineno})"
      exit 1
    end
    lineno += 1
  end

  unless STDIN.gets.nil?
    STDERR.puts "not enough expected lines"
    exit 1
  end
' "$@"
}

example () {
  printf "$PWD/examples/%s.rb" "$@"
}

test_jsonapi_generate_prints_payload_for_resource () {
jsonapi-generate persons | assert_json '
{
  "data": {
    "type": "persons",
    "id": 0,
    "attributes": {
      "first_name": "Sylvan",
      "last_name": "Bradtke",
      "gender": "female",
      "phones": [
        {
          "label": "home",
          "phone_number": "1-576-881-6778 x15989"
        }
      ],
      "address": {
        "street": "40350 Alexanne Vista",
        "city": "South Dimitri",
        "state": "Maryland"
      }
    }
  }
}'
}

test_jsonapi_generate_notifies_if_not_enough_resources_are_available_to_associate () {
jsonapi-generate -s 1 groups 2>&1 | grep -q 'not enough resources of type: :persons'
}

test_jsonapi_generate_prints_payload_for_resource_with_relationship () {
jsonapi-generate groups persons:3 | assert_json '
{
  "data": {
    "type": "groups",
    "id": 0,
    "attributes": {
      "name": "Sandra Franecki"
    },
    "relationships": {
      "members": {
        "data": [
          {
            "type": "persons",
            "id": 0
          },
          {
            "type": "persons",
            "id": 1
          }
        ]
      }
    }
  }
}
{
  "data": {
    "type": "persons",
    "id": 0,
    "attributes": {
      "first_name": "Duane",
      "last_name": "Lehner",
      "gender": "female",
      "phones": [
        {
          "label": "home",
          "phone_number": "868-816-7781"
        },
        {
          "label": "home",
          "phone_number": "530-350-2381 x333"
        }
      ],
      "address": {
        "street": "801 Hudson Parks",
        "city": "West Nonaville",
        "state": "Idaho"
      }
    },
    "relationships": {
      "group": {
        "data": [
          {
            "type": "groups",
            "id": 0
          }
        ]
      }
    }
  }
}
{
  "data": {
    "type": "persons",
    "id": 1,
    "attributes": {
      "first_name": "Weldon",
      "last_name": "Howe",
      "gender": "male",
      "phones": [
        {
          "label": "cell",
          "phone_number": "656-841-4981"
        },
        {
          "label": "home",
          "phone_number": "(467) 203-5944 x644"
        },
        {
          "label": "cell",
          "phone_number": "537-550-1593 x050"
        }
      ],
      "address": {
        "street": "3420 Schumm Lights",
        "city": "Enricohaven",
        "state": "South Carolina"
      }
    },
    "relationships": {
      "group": {
        "data": [
          {
            "type": "groups",
            "id": 0
          }
        ]
      }
    }
  }
}
{
  "data": {
    "type": "persons",
    "id": 2,
    "attributes": {
      "first_name": "Woodrow",
      "last_name": "Kassulke",
      "gender": "female",
      "phones": [
        {
          "label": "work",
          "phone_number": "829.233.2341 x291"
        }
      ],
      "address": {
        "street": "78230 Gregory Parkway",
        "city": "Audramouth",
        "state": "Texas"
      }
    }
  }
}
'
}

#
# --attributes-only
#

test_jsonapi_generate_attributes_only_prints_attributes_for_resource () {
jsonapi-generate --attributes-only persons | assert_json '
{
  "first_name": "Sylvan",
  "last_name": "Bradtke",
  "gender": "female",
  "phones": [
    {
      "label": "home",
      "phone_number": "1-576-881-6778 x15989"
    }
  ],
  "address": {
    "street": "40350 Alexanne Vista",
    "city": "South Dimitri",
    "state": "Maryland"
  }
}'
}

#
# -h
#

test_jsonapi_generate_h_prints_help () {
jsonapi-generate -h | grep -q "usage: jsonapi-generate"
}

#
# -L
#

test_jsonapi_generate_L_maximizes_lists () {
jsonapi-generate -L max persons | jq -r .data.attributes.phones[].phone_number | assert_output "\
893.524.7688
1-878-159-8943
(123) 813-3370
"
}

test_jsonapi_generate_L_minimizes_lists () {
jsonapi-generate -L min persons | jq -r .data.attributes.phones[].phone_number | assert_output "\
893.524.7688
"
}

#
# -l
#

test_jsonapi_generate_l_lists_available_resources () {
jsonapi-generate -l | grep -q "^persons$"
}

#
# -n
#

test_jsonapi_generate_n_specifies_how_many_sets_to_emit () {
jsonapi-generate -n 3 persons:2 | jq -r .data.attributes.first_name | assert_output "\
Sylvan
Wilson
Aimee
Brenna
Kenya
Jacklyn
"
}

. ts
