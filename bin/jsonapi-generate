#!/usr/bin/env ruby
require 'rubygems'
require 'bundler'
Bundler.setup

begin
  require 'optparse'
  require 'jsonapi_cli'
  require 'jsonapi_cli/resource'
  require 'json'
  require 'shellwords'

  options = {
    :mode => :payloads,
    :seed => ENV['JSONAPI_SEED'],
  }
  OptionParser.new do |opts|
    opts.banner = %{
usage: jsonapi-generate [options] RESOURCE_FILES...

  Generate payloads from resource descriptions.

options:

}.lstrip

    opts.on("--[no-]attributes-only", "generate attributes onlu") do |value|
      options[:mode] = value ? :attributes : :payloads
    end

    opts.on("-h", "--help", "print this help") do
      puts opts
      puts
      puts JsonapiCli.version
      exit
    end

    opts.on("-s", "--seed SEED", "set seed value") do |value|
      options[:seed] = value
    end

  end.parse!

  resource_files = ARGV.dup; ARGV.clear
  resource_files.each {|file| require File.expand_path(file) }

  if seed = options[:seed]
    Random.srand(seed.to_i)
  end

  mode = options[:mode]
  JsonapiCli::Resource.each do |resource_class|
    resource = resource_class.new
    case mode
    when :attributes
      puts resource.attributes.to_json
    when :payloads
      puts resource.payload.to_json
    end
  end

rescue Interrupt
  exit 130
rescue Errno::EPIPE
  exit 0
end
